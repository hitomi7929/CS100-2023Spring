// example-1
int a[] = { 1,2 };

	for (int i = 0; i < sizeof(a) / sizeof(a[0]); i++)
		printf("a[%d] = %d ...\n", i, a[i]);
	
	int j = 2;
	//char test[j];
	
	
// example-2
	const int number = 10;
	int x;
	int count[number];

	for (int i = 0; i < sizeof(count)/sizeof(count[0]); i++) {
		count[i] = 0;
	}
	
	scanf("%d", &x);
	while (x != -1) {
		if (x >= 0 && x <= 9) {
			count[x]++;
		}
		scanf("%d", &x);
	}

	for (int i = 0; i < sizeof(count) / sizeof(count[0]); i++) {
		printf("count[%d] = %d ...\n", i, count[i]);
	}

	
// example-3
	int a[] = { 1, 2, 3,4,5 };
	int b[5] = a;
	
// example-4
// pointer and array
void minmax(int a[], int len, int *min, int *max);

int main(void) {

	int a[] = { 1,2,3,4,5,6,7,8,-1,0,9,-3,10 };
	int min, max;

	printf("main: sizeof(a) = %d...\n", sizeof(a));
	printf("main: a = %p...\n", a);
	printf("main: &a[0] = %p...\n", &a[0]);

	printf("main: a[0] = %d...\n", a[0]);

	minmax(a, sizeof(a) / sizeof(a[0]), &min, &max);

	printf("min = %d, max = %d ...\n", min, max);

	printf("main: a[0] = %d...\n", a[0]);

	return 0;
}

void minmax(int a[], int len, int *min, int *max) {

	printf("func: sizeof(a) = %d...\n", sizeof(a));
	printf("func: a = %p...\n", a);
	printf("func: &a[0] = %p...\n", &a[0]);
	
	*min = *max = a[0];

	for (int i = 0; i < len; i++) {
		if (a[i] < *min)
			*min = a[i];

		if (a[i] > *max)
			*max = a[i];
	}

	a[0] = 1000;
}

// example-5
// int b[] <--> int *const b
	int test = 100;
	int *p = &test;
	
	printf("*p = %d ...\n", *p);
	printf("p[0] = %d ...\n", p[0]);

	int test2[] = { 10, 20 };
	int *p2 = test2;
 
	printf("*p2 = %d ...\n", *p2);
	printf("p2[1] = %d ...\n", p2[1]);


// example-6
	const int test = 100;
	int i = 10;
	int j = 20;
	const int *p1 = &i;
	int *const p2 = &j;

	*p1 = 20;
	*p2 = 20;

	p1 = &j;
	p2 = &i;

// example-7
// dynamic memory
	int size = 10;
	float *pArray = NULL;
	pArray = (float *)malloc(sizeof(float)*size);

	memset(pArray, 0, sizeof(float)*size);

	pArray[3] = 9;
	pArray[4] = 70;
	pArray[5] = 100;

	for (int i = 0; i < size; i++) {
		printf("pArray[%d] = %f ...\n", i, pArray[i]);
	}

	free(pArray);

// example-8
#include <stdio.h>
#include<stdlib.h>
#include<string.h>
#include<windows.h>

int main(void)
{
	void *p;

	int cnt = 0;
	while (( p = malloc(100*1024*1024)))
	{
		cnt++;
		Sleep(1000);
	}

	printf("use %d00MB space ...\n", cnt);
	
	return 0;

}


// example-9
	int *p;
	p = (int *)malloc(100 * 1024 * 1024);
	//p++;

	int i;
	// p = &i;

	free(p);

	//free(p);
	// printf("xl_test ...\n");

	free(NULL);












	
	
